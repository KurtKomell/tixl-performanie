{
  "Id": "ca6f09ec-bbc4-4365-8210-bc10cd8d9f94"/*MergeIntLists*/,
  "Description": "Merges multiple lists of integers into a single list.\n\nThis operator combines several integer lists into one. It's particularly useful for assembling data packets for protocols like Art-Net or sACN, where different parts of a DMX universe might be generated by separate logic.\n\nTips:\n- Use `StartIndices` to specify where each input list should be placed in the final output list.\n- `MaxSize` defines the total size of the output list. If the combined lists are larger, they will be truncated.\n\nAKA: combine, join, concatenate, int list",
  "InputUis": [
    {
      "InputId": "24855d2a-595b-4e3e-81c5-65481c262f64"/*Enabled*/,
      "Position": {
        "X": -200.0,
        "Y": 150.0
      },
      "Description": "A list of booleans to enable or disable the merging of the corresponding input lists."
    },
    {
      "InputId": "387fb1db-944f-4eb1-bb6f-b149e4a51a42"/*StartIndices*/,
      "Position": {
        "X": -200.0,
        "Y": 150.0
      },
      "Description": "An optional list of start indices. If set, each input list will be written into the output list starting at the specified index. If not set, lists are concatenated one after another."
    },
    {
      "InputId": "9e60f3e7-a891-4e3e-81c5-65481c262f64"/*MaxSize*/,
      "Position": {
        "X": -200.0,
        "Y": 225.0
      },
      "Description": "The total size of the output list. If the merged lists are smaller, the remaining elements will be 0. If the merged lists are larger, they will be truncated."
    },
    {
      "InputId": "bdfe5576-2f45-473d-bb9d-95fc453fc774"/*InputLists*/,
      "Relevancy": "Required",
      "Position": {
        "X": -200.0,
        "Y": 75.0
      },
      "Description": "A multi-input for the integer lists to be merged."
    },
    {
      "InputId": "e3315721-2853-449a-af6a-43cd18400470"/*MergeMode*/,
      "Position": {
        "X": -200.0,
        "Y": 225.0
      },
      "Description": "Defines how overlapping data is handled. 'Override' will let later lists overwrite earlier ones. 'Add' will sum the values where lists overlap."
    }
  ],
  "SymbolChildUis": [],
  "OutputUis": [
    {
      "OutputId": "f28370f0-f0c6-418f-8fbf-167a7d1035fe"/*Result*/,
      "Position": {
        "X": 0.0,
        "Y": 200.0
      }
    }
  ]
}